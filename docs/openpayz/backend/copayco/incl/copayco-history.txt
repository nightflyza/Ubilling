Изменения в версии 2.1.5
1. Для CURL довалена опция отключающая проверку сертификата в тестовом режиме, при обращении к тестовому
   серверу CoPAYCo.


Изменения в версии 2.1.4
1. Исправлена оперчатка в названии свойства "cpc_ta_id" - русская буква "с" вместо английской "c".
2. Доработан метод "define_http_val" для автоматического заполнения свойств данными из GET/POST. Отдельным
   свойством $aAutoFill перечислены названия свойств для автозаполнения.


Изменения в версии 2.1.3
1. Серверная дата/время ("date_time") помечено как как поле не обязательное для заполнения,
   в соответствии с описанием CAPI. Тем не менее, при стандартном использовании CAPI это поле
   всегда будет заполнено. Это поле не заполняется только в простых схемах взаимодействия
   (см. п. 2.3.1 описания CAPI).
2. Дабавлен метод "get_copayco_ta_id" для получения ID транзакции в БД CoPAYCo.


Изменения в версии 2.1.2
1. Исправлена опечатка в названии класса, в стр. 1041 файла "copayco.php".
   Изменено название класса "copayco" на "copayco_api".


Изменения в версии 2.1.1
1. Добавлена автоматическая загрузка конфигурационного файла "config.php" в класс "copayco_api".
   
   В связи с этим произошли следующие изменения:
    - изменилась структура конфигурационного файла - теперь он представлен не в виде отдельных 
      переменных, а в виде массива, который возвращается через оператор "return";
    - нет необходимости передавать ключ MAC-подписи (он получается автоматически из конфигурационного
      файла). Как и раньше ключ MAC-подписи можно передавать в виде аргумента у метода instance и
      это значение будет иметь приоритет по отношению к значению из конфигурационного файла.
    - Поскольку теперь нет необходимости передавать ShopId в метод set_main_data этот аргумент
      "переместился" с первого на последнее место и стал не обязательным.
      ВАЖНО: эта доработка сделала текущую версию CAPI не совместимой с предыдущей. При переходе на
      эту версию надо обязательно скорректировать вызов этого метода
    - Появилась возможность, через конфигурационный файл, указывать режим работы CAPI (с тестовым или
      с рабочим доменом). В связи с этой доработкой теперь не рекомендуется из основного php-кода 
      напрямую обращаться к константам класса copayco_api. Для получения URL, который будет
      подставляется в тэг form следует использовать метод get_submit_url. Этот метод отдает URL
      в соответствии с выбранным режимом.
    - Добавился конфигурационный параметр 'charset', который позвляет передавать кодировку текущего сайта,
      в тех случаях, когда она отличается от UTF-8. Кодировку можно не указывать в конфигурационном
      файле, но задавать путем вызова метода set_charset.
    - Добавился конфигурационный параметр 'use_rand', который позволяет разрешать/запрещать
      использование случайного числа в запросе к серверу CoPAYCo.
    - Добавился конфигурационный параметр 'notify_mode', который позволяет указывать какую библиотеку
      использовать при обращении к серверу CoPAYCo для нотификации о предоставлении услуги/товара.
      Эта опция заложена для использования в будущем. В настоящий момент этот метод пока не
      используется.

    
   Теперь нет необходимости отдельно загружать и обрабатывать конфигурационный файл "config.php"
   в основном php-коде, но он должен находится в одной директории с файлом "copayco.php".
   Если есть необходимость разнести эти файлы в разные директории, следует:
    - создать "наследника" от класса "copayco_api";
    - в наследнике переопределить метод "get_config_path" и этот метод должен возвращать путь к
      конфигурационному файлу;
    - создавать объект API не на основе класса "copayco_api", а на основе наследника.
   Если есть необходимость получать конфигурационные данные из другого источника (например, из БД),
   следует:
    - создать "наследника" от класса "copayco_api";
    - в наследнике переопределить метод "get_config" и этот метод должен возвращать массив в том же
      виде, как он сейчас представлен в конфигурационном файле;
    - создавать объект API не на основе класса "copayco_api", а на основе наследника.
    
2. Добавился метод "set_charset", который позволяет указывать кодировку сайта, если она отличается
   от "UTF-8".
3. Добавился метод "set_language", который позволяет указывать язык, который будет автоматически
   выбран при переходе клиента на портал CoPAYCo.
4. Добавился метод "set_order_no", который позволяет указывать номер текущего заказа, если необходимо
   чтобы он отличался от ID транзакции.
5. Добавился метод "set_purpose", который позволяет указывать назначение платежа.
6. Добавился метод "get_submit_url", который позволяет получать URL для формы, с учетом режима
   работы сайта ("тестовый" или "основной").
7. Добавился метод "get_notification_url", который позволяет получать URL для нотификации о
   предоставлении товара/услуги, с учетом режима работы сайта ("тестовый" или "основной").
8. В списке полей запроса теперь добавились данные в соответствии с вышеназванными методами:
   'charset', 'lang', 'order_no', 'purpose'.